//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.17

use super::sea_orm_active_enums::LoginType;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "users")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub email: Option<String>,
    pub password_hash: Option<String>,
    pub login_type: LoginType,
    pub created_at: DateTimeWithTimeZone,
    pub updated_at: DateTimeWithTimeZone,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::oauth_accounts::Entity")]
    OauthAccounts,
    #[sea_orm(has_many = "super::pets::Entity")]
    Pets,
    #[sea_orm(has_many = "super::user_tokens::Entity")]
    UserTokens,
}

impl Related<super::oauth_accounts::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::OauthAccounts.def()
    }
}

impl Related<super::pets::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Pets.def()
    }
}

impl Related<super::user_tokens::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UserTokens.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
